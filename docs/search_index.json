[["la-mise-en-page.html", "Chapitre 3 La mise en page 3.1 Les données d’exemple 3.2 Les thèmes 3.3 Les titres 3.4 Flèche d’orientation 3.5 Échelle 3.6 Crédits 3.7 Habillage complet 3.8 Annotations 3.9 Les légendes 3.10 Étiquettes 3.11 Centrer la carte sur une région 3.12 Afficher plusieurs cartes sur la même figure 3.13 Export des cartes 3.14 Ajouter une image sur une carte 3.15 Placer précisément un élément sur la carte 3.16 Ajouter un ombrage à une couche 3.17 Création de cartons", " Chapitre 3 La mise en page Pour être finalisée, une carte thématique doit contenir certains éléments additionnels tels que : le titre, l’auteur, la source, l’échelle, l’orientation… 3.1 Les données d’exemple Les lignes suivantes importent les couches d’information spatiales situées dans le fichier geopackage lot46.gpkg. library(sf) # import des communes du Lot com &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;commune&quot;, quiet = TRUE) # import des départments français dep &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;departement&quot;, quiet = TRUE) # import des restaurants resto &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;restaurant&quot;, quiet = TRUE) # import des routes route &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;route&quot;, quiet = TRUE) 3.2 Les thèmes La fonction mf_theme() défini un thème cartographique. L’utilisation d’un thème permet de définir plusieurs paramètres graphiques qui sont ensuite appliqués aux cartes créées avec mapsf. Ces paramètres sont : les marges de la carte, la couleur principale, la couleur de fond, la position et l’aspect du titre. Un thème peut également être défini avec les fonctions mf_init() et mf_export(). 3.2.1 Utiliser un thème prédéfini Une série de thèmes prédéfinis est disponible par défaut (voir ?mf_theme). library(mapsf) # utilisation d&#39;une couleur de fond pour la figure, pour voir l&#39;utilisation des marges opar &lt;- par(mfrow = c(2,2)) # Utilisation d&#39;un thème prédéfini mf_theme(&quot;default&quot;) mf_map(com) mf_title(&quot;Theme : &#39;default&#39;&quot;) mf_theme(&quot;darkula&quot;) mf_map(com) mf_title(&quot;Theme : &#39;darkula&#39;&quot;) mf_theme(&quot;candy&quot;) mf_map(com) mf_title(&quot;Theme : &#39;candy&#39;&quot;) mf_theme(&quot;nevermind&quot;) mf_map(com) mf_title(&quot;Theme : &#39;nevermind&#39;&quot;) par(opar) 3.2.2 Modifier un thème existant Il est possible de modifier un thème existant. Dans cet exemple, nous utilisons le thème “default” et nous en modifions quelques paramètres. library(mapsf) opar &lt;- par(mfrow = c(1,2)) mf_theme(&quot;default&quot;) mf_map(com) mf_title(&quot;default&quot;) mf_theme(&quot;default&quot;, tab = FALSE, font = 4, bg = &quot;grey60&quot;, pos = &quot;center&quot;) mf_map(com) mf_title(&quot;modified default&quot;) par(opar) 3.2.3 Créer un thème Il est également possible de créer un thème. mf_theme( bg = &quot;lightblue&quot;, # couleur de fond fg = &quot;tomato1&quot;, # couleur principale mar = c(0,0,1.5,0), # marges tab = FALSE, # style &quot;onglet&quot; pour le titre inner = FALSE, # titre à l&#39;intérieur de la zone de carte ou à l&#39;extérieur line = 1.5, # espace dédié au titre pos = &quot;center&quot;, # position du titre cex = 1.2, # taille du titre font = 2 # type de fonte pour le titre ) mf_map(com) mf_title(&quot;New theme&quot;) 3.3 Les titres La fonction `mf_title() permet d’ajouter un titre à une carte. mf_theme(&quot;default&quot;) mf_map(com) mf_title(&quot;Titre de la carte&quot;) Il est possible de personnaliser l’aspect du titre. mf_map(com) mf_title( txt = &quot;Titre de la carte&quot;, pos = &quot;center&quot;, tab = FALSE, bg = &quot;tomato3&quot;, fg = &quot;lightblue&quot;, cex = 1, line = 1.2, font = 1, inner = FALSE ) 3.4 Flèche d’orientation La fonction mf_arrow() permet de choisir la position et l’aspect de la flèche d’orientation. mf_map(com) mf_arrow() 3.5 Échelle La fonction mf_scale() permet de choisir la position et l’aspect de l’échelle. mf_map(com) mf_scale( size = 20, lwd = 2, cex = 1.2, ) 3.6 Crédits La fonction mf_credits() permet d’afficher une ligne de crédits (sources, auteur…). mf_map(com) mf_credits(&quot;IGN\\nGiraud &amp; Pécout, 2021&quot;) 3.7 Habillage complet La fonction mf_layout() permet d’afficher tous ces éléments. mf_map(com) mf_layout( title = &quot;Martinique&quot;, credits = &quot;IGN\\nGiraud &amp; Pécout, 2021&quot;, arrow = TRUE ) 3.8 Annotations mf_map(com) mf_annotation(com[com$NOM_COM == &quot;Cahors&quot;,], txt = &quot;Cahors&quot;, halo = TRUE, cex = 1.5) 3.9 Les légendes mf_map(com) mf_legend( type = &quot;prop&quot;, val = c(1000,500,200,10), inches = .4, title = &quot;Population&quot;, pos = &quot;topleft&quot; ) mf_legend( type = &quot;choro&quot;, val = c(0,10,20,30,40), pal = &quot;Greens&quot;, pos = &quot;bottomright&quot;, val_rnd = 0 ) 3.10 Étiquettes La fonction mf_label() est dédiée à l’afichage d’étiquettes. com_sel &lt;- com[st_intersects(com, com[com$NOM_COM == &quot;Cahors&quot;, ], sparse = F), ] mf_map(com_sel) mf_label( x = com_sel, var = &quot;NOM_COM&quot;, col= &quot;black&quot;, halo = TRUE, overlap = FALSE, lines = FALSE ) mf_scale() L’argument halo = TRUE permet d’afficher un léger halo autour des étiquettes et l’argument overlap = FALSE permet de créer des étiquettes ne se recouvrant pas. 3.11 Centrer la carte sur une région La fonction mf_init() permet d’initialiser une carte en la centrant sur une objet spatial. mf_init(x = com_sel, theme = &quot;iceberg&quot;) mf_map(com, add = TRUE) mf_map(com_sel, col = NA, border = &quot;red&quot;, lwd = 2, add = TRUE) 3.12 Afficher plusieurs cartes sur la même figure Il faut ici utiliser l’argument mfrow de la fonction par(). Le premier chiffre représente le nombre lignes et le deuxième le nombre de colonnes. # define the figure layout (1 row, 2 columns) par(mfrow = c(1, 2)) # first map mf_map(com) mf_map(com, &quot;AGR_H&quot;, &quot;prop&quot;) mf_title(&quot;Agriculture, hommes&quot;) # second map mf_map(com) mf_map(com, &quot;TER_F&quot;, &quot;prop&quot;) mf_title(&quot;Tertiaire, femmes&quot;) 3.13 Export des cartes Il est assez difficile d’exporter des figures (cartes ou autres) dont le ratio hauteur/largeur est satisfaisant. Le ratio par défaut des figures au format png est de 1 (480x480 pixels) : c2c &lt;- com[com$INSEE_COM == &quot;46138&quot;, ] png(&quot;img/c2c1.png&quot;) mf_map(c2c) mf_title(&quot;Cœur de Causse&quot;) dev.off() Sur cette carte beaucoup d’espace est perdu au nord et au sud de l’île. La fonction mf_export() permet des exports de cartes dont le ratio hauteur/largeur est contrôlé et correspond à celui d’un objet spatial. mf_export(c2c, &quot;img/c2c2.png&quot;, width = 480) mf_map(c2c) mf_title(&quot;Cœur de Causse&quot;) dev.off() L’emprise de cette carte est exactement celle de la région affichée. 3.14 Ajouter une image sur une carte Cela peut être utile pour ajouter un logo, un pictogramme. La fonction readPNG() du package png permet l’ajout d’images sur une figure. mf_theme(&quot;default&quot;, mar = c(0,0,0,0)) library(png) # import de l&#39;image logo &lt;- readPNG(&quot;img/Logo CG 46 - Bleu.png&quot;) # dimension de l&#39;image en unité de la carte pp &lt;- dim(logo)[2:1] * 20 # Définition d&#39;un point d&#39;encrage de l&#39;image dans la figure, ici # le coin supérieur gauche de la bounding box du département xy &lt;- st_bbox(com)[c(1,4)] mf_map(com, col = &quot;#D1914D&quot;, border = &quot;white&quot;) rasterImage( image = logo, xleft = xy[1], ybottom = xy[2] - pp[2], xright = xy[1] + pp[1], ytop = xy[2] ) 3.15 Placer précisément un élément sur la carte La fonction locator() permet de cliquer sur une figure et d’obtenir les coordonnées d’un point dans le système de coordonnées de la figure (de la carte). locator()peut être utilisée sur la plupart des graphiques (pas ceux produits avec ggplot2). How to interactively position legends and layout elements on a map with cartography 3.16 Ajouter un ombrage à une couche mf_shadow(com) mf_map(com, add=TRUE) 3.17 Création de cartons mf_init(x = com_sel, theme = &quot;agolalight&quot;, expandBB = c(0,0,0,.5)) mf_map(com, add = TRUE) mf_map(com_sel, col = &quot;tomato4&quot;, border = &quot;tomato1&quot;, lwd = 2, add = TRUE) mf_inset_on(x = dep, pos = &quot;topright&quot;, cex = .3) mf_map(dep, lwd = .5, border= &quot;grey90&quot;) mf_map(com_sel, col = &quot;tomato4&quot;, border = &quot;tomato1&quot;, lwd = .5, add = TRUE) mf_scale(size = 10, pos = &quot;bottomright&quot;, cex = .6, lwd = .5) mf_inset_off() mf_inset_on(x = com, pos = &quot;bottomright&quot;, cex = .3) mf_map(com, lwd = .5, border= &quot;grey90&quot;) mf_map(com_sel, col = &quot;tomato4&quot;, border = &quot;tomato1&quot;, lwd = .5, add = TRUE) mf_scale(size = 10, pos = &quot;bottomright&quot;, cex = .6, lwd = .5) mf_inset_off() mf_title(&quot;Cahors et ses environs&quot;) mf_scale(1) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
