[["index.html", "Cartographie avec R Préambule", " Cartographie avec R Timothée Giraud1 &amp; Hugues Pecout2 15 décembre 2021 Préambule Créer des cartes thématiques conformes aux règles de la sémiologie graphique et de la cartographie avec R. L’objectif de ce document est de fournir un support à l’apprentissage de la cartographie avec R. Comment utiliser le manuel Le projet RStudio contenant l’ensemble des données utilisées dans le manuel est disponible ici. Une fois le dossier décompressé il est possible de tester l’ensemble des manipulations proposées dans le projet RStudio. Contribution et feedback Vous pouvez nous envoyer vos remarques et suggestions en postant une issue sur le dépôt GitHub de ce document. La version en ligne de ce document est sous licence Creative Commons Attribution-NonCommercial-ShareAlike 4.0. UMS RIATE, CNRS, Université de Paris, F-75013 Paris, France↩︎ FR CIST, CNRS, F-75013 Paris, France↩︎ "],["mapsf.html", "Chapitre 1 mapsf 1.1 Présentation 1.2 Documentation", " Chapitre 1 mapsf L’écosystème spatial du logiciel libre R est riche, dynamique et mature et plusieurs packages permettent d’importer, de traiter et de représenter les données spatiales. Le package mapsf (Giraud, 2021) s’appuie sur cet écosystème pour intégrer la création de cartes thématiques de qualité dans les chaînes de traitement avec R. D’autres packages peuvent être utilisés pour réaliser des cartes thématiques. Le package ggplot2 (Wickham, 2016), en association avec le package ggspatial (Dunnington, 2021), permet par exemple d’afficher des objets spatiaux et de réaliser des cartes thématiques simples. Le package tmap (Tennekes, 2018) est dédié à la création de cartes thématiques, il utilise une syntaxe proche de celle de ggplot2 (enchaînement d’instructions combinées avec le signe ‘+’). La documentation et les tutoriels pour utiliser ces deux packages sont facilement accessibles sur le web. Ici, nous utiliserons principalement le package mapsf dont les fonctionnalités sont assez complètes et la prise en main plutôt simple. De plus, le package est relativement léger. 1.1 Présentation mapsf permet de créer la plupart des types de carte utilisés habituellement en cartographie statistique (cartes choroplèthes, typologies, symboles proportionnels ou gradués…). Pour chaque type de carte, plusieurs paramètres permettent de personnaliser la représentation cartographique. Ces paramètres sont les mêmes que ceux que l’on retrouve dans les logiciels de SIG ou de cartographie usuels (par exemple, le choix des discrétisations et des palettes de couleurs, la modification de de la taille des symboles ou la personnalisation des légendes). Associées aux fonctions de représentation des données d’autres fonctions sont dédiées à l’habillage cartographique (thèmes ou chartes graphiques, légendes, échelles, flèches d’orientation, titre, crédits, annotations…), à la création de cartons ou à l’export des cartes. mapsf est le successeur de cartography (Giraud et Lambert, 2017), il offre les mêmes fonctionnalités principales tout en étant plus léger et plus ergonomique. 1.2 Documentation Pour utiliser ce package plusieurs sources peuvent être consultées : La documentation du package accessible sur internet ou directement dans R (?mapsf), Les vignettes associées au package présentent des exemples de scripts, Le blog R Géomatique qui met à disposition ressources et exemples liés au package et plus généralement à l’écosystème spatial de R. References Dunnington, D. (2021). ggspatial: Spatial Data Framework for ggplot2. https://CRAN.R-project.org/package=ggspatial Giraud, T. (2021). mapsf: Thematic Cartography. https://CRAN.R-project.org/package=mapsf Giraud, T. et Lambert, N. (2017). Reproducible Cartography. M. Peterson (dir.), Cham, Switzerland (p. 173‑183). https://doi.org/10.1007/978-3-319-57336-6_13 Tennekes, M. (2018). tmap: Thematic Maps in R. Journal of Statistical Software, 84(6), 1‑39. https://doi.org/10.18637/jss.v084.i06 Wickham, H. (2016). ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org "],["les-types-de-cartes.html", "Chapitre 2 Les types de cartes 2.1 Les données d’exemple 2.2 Afficher un fond de carte 2.3 Carte de symboles proportionnels 2.4 Carte choroplèthe 2.5 Carte de typologie 2.6 Carte de stocks et de ratios 2.7 Carte de stocks et de catégories", " Chapitre 2 Les types de cartes La fonction mf_map() est la fonction centrale du package mapsf. Elle permet de réaliser la plupart des représentations usuelles en cartographie. Ces arguments principaux sont : x, un objet sf ; var, le nom de la variable à représenter ; type, le type de représentation. 2.1 Les données d’exemple Les lignes suivantes importent les couches d’information spatiales situées dans le fichier geopackage lot46.gpkg. library(sf) # import des communes du Lot com &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;commune&quot;, quiet = TRUE) # import des départments français dep &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;departement&quot;, quiet = TRUE) # import des restaurants resto &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;restaurant&quot;, quiet = TRUE) # import des routes route &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;route&quot;, quiet = TRUE) 2.2 Afficher un fond de carte Utilisée sans précision de type, la fonction mf_map() affiche simplement le fond de carte. library(mapsf) # Communes mf_map(x = com, border = &quot;white&quot;) mf_map(x = dep, lwd = 2, col = NA, add = TRUE) mf_map(x = route, lwd = .5, col = &quot;ivory4&quot;, add = TRUE) mf_map(x = resto, pch = 20, cex = .7, col = &quot;darkred&quot;, add = TRUE) 2.3 Carte de symboles proportionnels Les cartes de symboles proportionnels sont utilisées pour représenter les variables de stocks (variables quantitatives absolues, la somme et la moyenne ont un sens). La fonction mf_map(..., type = \"prop\") propose cette représentation. # Communes mf_map(x = com) # Symboles proportionnels mf_map( x = com, var = &quot;POPULATION&quot;, type = &quot;prop&quot;, leg_title = &quot;Population totale\\n(2015)&quot; ) # Titre mf_title(&quot;Distribution de la population dans le Lot&quot;) 2.3.1 Comparer plusieurs cartes Il est possible de fixer les dimensions du plus grand symbole correspondant à une certaine valeur avec les arguments inches et val_max. Nous pouvons ainsi construire des cartes en symboles proportionnels comparables. # Afficher deux cartes en vis-à-vis par(mfrow = c(1,2)) # Communes mf_map(x = com, border = &quot;grey90&quot;, lwd = .5) # Population active occupée dans l&#39;industrie, les hommes mf_map( x = com, var = &quot;IND_H&quot;, type = &quot;prop&quot;, inches = .2, val_max = 600, leg_title = &quot;Hommes&quot;, leg_val_cex = .5, ) # ajout d&#39;un titre mf_title(&quot;Population active occupée dans l&#39;industrie&quot;) # Communes mf_map(x = com, border = &quot;grey90&quot;, lwd = .5) # Population active occupée dans l&#39;industrie, les femmes mf_map( x = com, var = &quot;IND_F&quot;, type = &quot;prop&quot;, inches = .2, val_max = 600, leg_title =&quot;Femmes&quot;, leg_val_cex = .5 ) # ajout d&#39;un titre mf_title(&quot;Population active occupée dans l&#39;industrie&quot;) Nous avons ici affiché deux cartes en vis-à-vis, voir XXXX pour plus de détails. 2.3.2 Les cartes de liens proportionnels TO DO 2.4 Carte choroplèthe Les cartes choroplèthes sont utilisées pour représenter les variables de ratios (variables quantitatives relatives, la moyenne a un sens, la somme n’a pas de sens). Pour ce genre de représentation il faut au préalable : choisir une méthode de discrétisation pour transformer une série statistique continue en classes définies par des intervalles, choisir un nombre de classes, choisir une palette de couleurs. La fonction mf_map(..., type = \"choro\") permet de créer des cartes choroplètes. Les arguments nbreaks et breaks servent à paramétrer les discrétisations, et la fonction mf_get_breaks() permet de travailler sur les discrétisations en dehors de la fonction mf_map(). De même, l’argument pal est utilisé pour renseigner une palette de couleur, mais plusieurs fonctions peuvent être utilisées pour paramétrer les palettes en dehors de la fonction (mf_get_pal…). # Densité de population (hab./km2) en utilisant la fonction sf::st_area() com$DENS &lt;- 1e6 * com$POP / as.numeric(st_area(com)) mf_map( x = com, var = &quot;DENS&quot;, type = &quot;choro&quot;, breaks = &quot;quantile&quot;, pal = &quot;Dark Mint&quot;, lwd = 1, leg_title = &quot;Densité de population\\n(habitants par km2)&quot;, leg_val_rnd = 0 ) mf_title(&quot;Distribution de la population dans le Lot (2018)&quot;) 2.4.1 Discrétisations La fonction mf_get_breaks() met à disposition les méthodes de discrétisations de variables classique : quantiles, moyenne/écart-type, amplitudes égales, moyennes emboîtées, Fisher-Jenks, géométrique … com$POP_ACT &lt;- com$AGR_H + com$AGR_F + com$IND_H + com$IND_F + com$BTP_H + com$BTP_F + com$TER_H + com$TER_F com$SHARE_ACT &lt;- 100 * com$POP_ACT / com$POPULATION d1 &lt;- mf_get_breaks(com$SHARE_ACT, nbreaks = 6, breaks = &quot;equal&quot;, freq = T) d2 &lt;- mf_get_breaks(com$SHARE_ACT, nbreaks = 6, breaks = &quot;quantile&quot;) d3 &lt;- mf_get_breaks(com$SHARE_ACT, nbreaks = 6, breaks = &quot;geom&quot;) d4 &lt;- mf_get_breaks(com$SHARE_ACT, breaks = &quot;msd&quot;, central = FALSE) 2.4.2 Palettes de couleurs L’argument pal de mf_map() est dédié au choix d’une palette de couleur. Les palettes fournies par la fonction hcl.colors() peuvent être utilisées directement. mf_map(x = com, var = &quot;SHARE_ACT&quot;, type = &quot;choro&quot;, breaks = d4, pal = &quot;Blues 3&quot;) knitr::include_graphics(&quot;img/swatch-plot-1.svg&quot;) Figure 2.1: Palettes directement disponibles La fonction mf_get_pal() permet d’afficher toutes palettes de couleurs disponibles dans cartography. La fonction carto.pal() permet de construire une palette de couleur. Il est possible de créer des palettes associant 2 couleurs. mypal &lt;- mf_get_pal(n = c(6,3), palette = c(&quot;Reds 3&quot;, &quot;Greens&quot;)) image(1:9, 1, as.matrix(1:9), col=mypal, xlab = &quot;&quot;, ylab = &quot;&quot;, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;,bty = &quot;n&quot;) 2.5 Carte de typologie Les cartes de typologies sont utilisées pour représenter les variables qualitatives. La fonction mf_map(..., type = \"typo\") propose cette représentation. mf_map( x = com, var=&quot;STATUT&quot;, type = &quot;typo&quot;, pal = c(&quot;aquamarine4&quot;, &quot;yellow3&quot;,&quot;wheat&quot;), lwd = .7, leg_title = &quot;&quot; ) mf_title(&quot;Statut Administratif&quot;) 2.5.1 Ordonner les valeurs dans la légende L’argument val_order sert à ordonner les modalités dans la légende. mf_map( x = com, var=&quot;STATUT&quot;, type = &quot;typo&quot;, pal = c(&quot;aquamarine4&quot;, &quot;yellow3&quot;,&quot;wheat&quot;), val_order = c(&quot;Préfecture&quot;, &quot;Sous-préfecture&quot;, &quot;Commune simple&quot;), lwd = .7, leg_title = &quot;&quot; ) mf_title(&quot;Statut Administratif&quot;) 2.5.2 Les cartes de points Quand l’implantation de la couche est ponctuelle, des symboles sont utilisés pour porter les couleurs de la typologie. # extraction des centroides de la préfectures et des sous-préfectures com_ctr &lt;- st_centroid(com[com$STATUT != &quot;Commune simple&quot;, ]) mf_map(com) mf_map( x = com_ctr, var = &quot;STATUT&quot;, type = &quot;typo&quot;, cex = 3, pch = 23, pal = c(&quot;aquamarine4&quot;, &quot;yellow3&quot;), leg_title = &quot;&quot;, add = TRUE ) mf_title(&quot;Statut Administratif&quot;) 2.5.3 Les cartes de lignes # Sélection des routes qui intersectent la commune de Cahors cahors &lt;- com[com$NOM_COM == &quot;Cahors&quot;, ] route_cahors &lt;- route[st_intersects(x = route, y = cahors, sparse = FALSE), ] mf_map(cahors) mf_map( x = route_cahors, var = &quot;VOCATION&quot;, type = &quot;typo&quot;, lwd = 2, pal = mf_get_pal(n = 4, &quot;Dark 2&quot;), leg_title = &quot;Type de route&quot;, add = TRUE ) mf_title(&quot;Statut Administratif&quot;) 2.6 Carte de stocks et de ratios La fonction mf_map(..., var = c(\"var1\", \"var2\"), type = \"prop_tchoro\") représente des symboles proportionnels dont les surfaces sont proportionnelles aux valeurs d’une variable et dont la couleur repose sur la discrétisation d’une seconde variable. La fonction utilise les arguments des fonctions mf_map(..., type = \"prop\") et mf_map(..., type = \"choro\"). mf_map(x = com) mf_map( x = com, var = c(&quot;POPULATION&quot;, &quot;DENS&quot;), type = &quot;prop_choro&quot;, border = &quot;grey50&quot;, lwd = 1, leg_pos = c(&quot;topright&quot;, &quot;topleft&quot;), leg_title = c(&quot;Population&quot;, &quot;Densité\\nde population\\n(en hab./km2)&quot;), breaks = &quot;q6&quot;, pal = &quot;Magenta&quot;, leg_val_rnd = c(0,1)) mf_title(&quot;Population&quot;) 2.7 Carte de stocks et de catégories La fonction mf_map(..., var = c(\"var1\", \"var2\"), type = \"prop_typo\") représente des symboles proportionnels dont les surfaces sont proportionnelles aux valeurs d’une variable et dont la couleur représente les modalités d’une variable qualitative. La fonction utilise les arguments des fonctions mf_map(..., type = \"prop\") et mf_map(..., type = \"typo\"). mf_map(x = com) mf_map( x = com, var = c(&quot;POPULATION&quot;, &quot;STATUT&quot;), type = &quot;prop_typo&quot;, pal = c(&quot;aquamarine4&quot;, &quot;yellow3&quot;,&quot;wheat&quot;), val_order = c(&quot;Préfecture&quot;, &quot;Sous-préfecture&quot;, &quot;Commune simple&quot;), leg_pos = c(&quot;bottomleft&quot;,&quot;topleft&quot;), leg_title = c(&quot;Population\\n(2015)&quot;, &quot;Statut administratif&quot;), ) mf_title(&quot;Population&quot;) "],["la-mise-en-page.html", "Chapitre 3 La mise en page 3.1 Les données d’exemple 3.2 Les thèmes 3.3 Les titres 3.4 Flèche d’orientation 3.5 Échelle 3.6 Crédits 3.7 Habillage complet 3.8 Annotations 3.9 Les légendes 3.10 Étiquettes 3.11 Centrer la carte sur une région 3.12 Afficher plusieurs cartes sur la même figure 3.13 Export des cartes 3.14 Ajouter une image sur une carte 3.15 Placer précisément un élément sur la carte 3.16 Ajouter un ombrage à une couche 3.17 Création de cartons", " Chapitre 3 La mise en page Pour être finalisée, une carte thématique doit contenir certains éléments additionnels tels que : le titre, l’auteur, la source, l’échelle, l’orientation… 3.1 Les données d’exemple Les lignes suivantes importent les couches d’information spatiales situées dans le fichier geopackage lot46.gpkg. library(sf) # import des communes du Lot com &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;commune&quot;, quiet = TRUE) # import des départments français dep &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;departement&quot;, quiet = TRUE) # import des restaurants resto &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;restaurant&quot;, quiet = TRUE) # import des routes route &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;route&quot;, quiet = TRUE) 3.2 Les thèmes La fonction mf_theme() défini un thème cartographique. L’utilisation d’un thème permet de définir plusieurs paramètres graphiques qui sont ensuite appliqués aux cartes créées avec mapsf. Ces paramètres sont : les marges de la carte, la couleur principale, la couleur de fond, la position et l’aspect du titre. Un thème peut également être défini avec les fonctions mf_init() et mf_export(). 3.2.1 Utiliser un thème prédéfini Une série de thèmes prédéfinis est disponible par défaut (voir ?mf_theme). library(mapsf) # utilisation d&#39;une couleur de fond pour la figure, pour voir l&#39;utilisation des marges opar &lt;- par(mfrow = c(2,2)) # Utilisation d&#39;un thème prédéfini mf_theme(&quot;default&quot;) mf_map(com) mf_title(&quot;Theme : &#39;default&#39;&quot;) mf_theme(&quot;darkula&quot;) mf_map(com) mf_title(&quot;Theme : &#39;darkula&#39;&quot;) mf_theme(&quot;candy&quot;) mf_map(com) mf_title(&quot;Theme : &#39;candy&#39;&quot;) mf_theme(&quot;nevermind&quot;) mf_map(com) mf_title(&quot;Theme : &#39;nevermind&#39;&quot;) par(opar) 3.2.2 Modifier un thème existant Il est possible de modifier un thème existant. Dans cet exemple, nous utilisons le thème “default” et nous en modifions quelques paramètres. library(mapsf) opar &lt;- par(mfrow = c(1,2)) mf_theme(&quot;default&quot;) mf_map(com) mf_title(&quot;default&quot;) mf_theme(&quot;default&quot;, tab = FALSE, font = 4, bg = &quot;grey60&quot;, pos = &quot;center&quot;) mf_map(com) mf_title(&quot;modified default&quot;) par(opar) 3.2.3 Créer un thème Il est également possible de créer un thème. mf_theme( bg = &quot;lightblue&quot;, # couleur de fond fg = &quot;tomato1&quot;, # couleur principale mar = c(0,0,1.5,0), # marges tab = FALSE, # style &quot;onglet&quot; pour le titre inner = FALSE, # titre à l&#39;intérieur de la zone de carte ou à l&#39;extérieur line = 1.5, # espace dédié au titre pos = &quot;center&quot;, # position du titre cex = 1.2, # taille du titre font = 2 # type de fonte pour le titre ) mf_map(com) mf_title(&quot;New theme&quot;) 3.3 Les titres La fonction `mf_title() permet d’ajouter un titre à une carte. mf_theme(&quot;default&quot;) mf_map(com) mf_title(&quot;Titre de la carte&quot;) Il est possible de personnaliser l’aspect du titre. mf_map(com) mf_title( txt = &quot;Titre de la carte&quot;, pos = &quot;center&quot;, tab = FALSE, bg = &quot;tomato3&quot;, fg = &quot;lightblue&quot;, cex = 1, line = 1.2, font = 1, inner = FALSE ) 3.4 Flèche d’orientation La fonction mf_arrow() permet de choisir la position et l’aspect de la flèche d’orientation. mf_map(com) mf_arrow() 3.5 Échelle La fonction mf_scale() permet de choisir la position et l’aspect de l’échelle. mf_map(com) mf_scale( size = 20, lwd = 2, cex = 1.2, ) 3.6 Crédits La fonction mf_credits() permet d’afficher une ligne de crédits (sources, auteur…). mf_map(com) mf_credits(&quot;IGN\\nGiraud &amp; Pécout, 2021&quot;) 3.7 Habillage complet La fonction mf_layout() permet d’afficher tous ces éléments. mf_map(com) mf_layout( title = &quot;Martinique&quot;, credits = &quot;IGN\\nGiraud &amp; Pécout, 2021&quot;, arrow = TRUE ) 3.8 Annotations mf_map(com) mf_annotation(com[com$NOM_COM == &quot;Cahors&quot;,], txt = &quot;Cahors&quot;, halo = TRUE, cex = 1.5) 3.9 Les légendes mf_map(com) mf_legend( type = &quot;prop&quot;, val = c(1000,500,200,10), inches = .4, title = &quot;Population&quot;, pos = &quot;topleft&quot; ) mf_legend( type = &quot;choro&quot;, val = c(0,10,20,30,40), pal = &quot;Greens&quot;, pos = &quot;bottomright&quot;, val_rnd = 0 ) 3.10 Étiquettes La fonction mf_label() est dédiée à l’afichage d’étiquettes. com_sel &lt;- com[st_intersects(com, com[com$NOM_COM == &quot;Cahors&quot;, ], sparse = F), ] mf_map(com_sel) mf_label( x = com_sel, var = &quot;NOM_COM&quot;, col= &quot;black&quot;, halo = TRUE, overlap = FALSE, lines = FALSE ) # layoutLayer(title = &quot;Communes&quot;, tabtitle = TRUE, author = &quot;INSEE, 2016&quot;, # sources =&quot;&quot;, north =TRUE, frame = FALSE, scale = 5) L’argument halo = TRUE permet d’afficher un léger halo autour des étiquettes et l’argument overlap = FALSE permet de créer des étiquettes ne se recouvrant pas. 3.11 Centrer la carte sur une région mf_init(x = com_sel, theme = &quot;iceberg&quot;) mf_map(com, add = TRUE) mf_map(com_sel, col = NA, border = &quot;red&quot;, lwd = 2, add = TRUE) 3.12 Afficher plusieurs cartes sur la même figure Il faut ici utiliser l’argument mfrow de la fonction par(). Le premier chiffre représente le nombre lignes et le deuxième le nombre de colonnes. 3.13 Export des cartes Il est assez difficile d’exporter des figures (cartes ou autres) dont le ratio hauteur/largeur estt satisfaisant. Le ratio par défaut des figures au format png est de 1 (480x480 pixels) : Sur cette carte beaucoup d’espace est perdu à l’est et à l’ouest de l’île. L’emprise de cette carte est exactement celle de l’île. 3.14 Ajouter une image sur une carte Cela peut être utile pour ajouter un logo, un pictogramme. La fonction readPNG() du package png permet l’ajout d’images sur une figure. mf_theme(&quot;default&quot;) library(png) # import de l&#39;image logo &lt;- readPNG(&quot;img/mapmonster.png&quot;) # dimension de l&#39;image en unité de la carte pp &lt;- dim(logo)[2:1] * 16 # Définition d&#39;un point d&#39;encrage de l&#39;image dans la figure, ici # le coin inférieur gauche de la bounding box de la martinique. xy &lt;- st_bbox(com)[1:2] mf_map(com, col = &quot;#D1914D&quot;, border = &quot;white&quot;) rasterImage( image = logo, xleft = xy[1], ybottom = xy[2], xright = xy[1] + pp[1], ytop = xy[2] + pp[2] ) mf_layout() 3.15 Placer précisément un élément sur la carte La fonction locator() permet de cliquer sur une figure et d’obtenir les coordonnées d’un point dans le système de coordonnées de la figure (de la carte). locator()peut être utilisée sur la plupart des graphiques (pas ceux produits avec ggplot2). How to interactively position legends and layout elements on a map with cartography 3.16 Ajouter un ombrage à une couche mf_shadow(com) mf_map(com, add=TRUE) 3.17 Création de cartons mf_init(x = com_sel, theme = &quot;agolalight&quot;, expandBB = c(0,0,0,.5)) mf_map(com, add = TRUE) mf_map(com_sel, col = &quot;tomato4&quot;, border = &quot;tomato1&quot;, lwd = 2, add = TRUE) mf_inset_on(x = com, pos = &quot;topright&quot;, cex = .33) mf_map(com) mf_map(com_sel, col = &quot;tomato4&quot;, border = &quot;tomato1&quot;, lwd = .5, add = TRUE) mf_scale(size = 10, pos = &quot;bottomright&quot;, cex = .6, lwd = .5) mf_inset_off() "],["les-cartes-en-3d.html", "Chapitre 4 Les cartes en 3D 4.1 linemap 4.2 Relief Tanaka 4.3 rayshader", " Chapitre 4 Les cartes en 3D 4.1 linemap Le package linemap (Giraud, 2017) permet de réaliser des cartes composées de lignes. library(linemap) library(sf) library(terra) library(mapsf) # import du raster de population rpop &lt;- rast(&quot;data/pop.tif&quot;) # import des communes du Lot com &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;commune&quot;, quiet = TRUE) com &lt;- st_transform(com, st_crs(rpop)) # découpage selon l&#39;emprise de com rpop &lt;- trim(mask(rpop, vect(com))) # transformation en data.frame pop &lt;- as.data.frame(rpop, xy = TRUE) pop &lt;- pop[order(pop$y), ] # cartographie th &lt;- mf_theme(&quot;green&quot;) mf_init(com) linemap( x = pop, var = &quot;Ind&quot;, k = 10, threshold = 15, lwd = 1, col = th$bg, border = th$fg, add = TRUE) mf_title(&quot;Population du Lot, 2015&quot;) mf_credits(&quot;Giraud &amp; Pecout, 2021\\nINSEE, Données carroyées Filosofi 2015&quot;) 4.2 Relief Tanaka Nous utilisons le package tanaka (Giraud, 2020) qui met à disposition une méthode (Tanaka, 1950) utilisée pour améliorer la perception du relief. library(tanaka) # import du raster de population rpop &lt;- rast(&quot;data/pop.tif&quot;) # import des communes du Lot com &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;commune&quot;, quiet = TRUE) com &lt;- st_transform(com, st_crs(rpop)) # lissage du raster mat &lt;- focalMat(x = rpop, d = c(1500), type = &quot;Gauss&quot;) rpopl &lt;- focal(x = rpop, w = mat, fun = sum, na.rm = TRUE) rpopl &lt;- raster::raster(rpopl) # cartographie col1 &lt;- hcl.colors(8, &quot;Rocket&quot;, alpha = .3, rev = T) col2 &lt;- hcl.colors(8, &quot;Rocket&quot;, alpha = 1, rev = T)[-1] mf_theme(&quot;agolalight&quot;) mf_init(com) tanaka(x = rpopl, breaks = c(0,10,25, 50,100,250,500,750, 1972), col = col1, light = NA, dark = NA, add = T, legend.pos = &quot;n&quot;) tanaka(x = rpopl, breaks = c(0,10,25,50,100,250,500,786), col = col2, add = T, mask = com, legend.pos = &quot;n&quot;) mf_legend(type = &quot;choro&quot;, pos = &quot;topleft&quot;, val = c(0,10,25,50,100,250,500,786), pal = col2, bg = &quot;#EDF4F5&quot;, fg = NA, frame = T, val_rnd = 0, title = &quot;Habitants\\npar km2&quot;) mf_title(&quot;Population lissée du Lot, 2015&quot;) mf_credits(&quot;Giraud &amp; Pecout, 2021\\nINSEE, Données carroyées Filosofi 2015&quot;, bg = &quot;#EDF4F5&quot;) The tanaka package 4.3 rayshader Le package rayshader (Morgan-Wall, 2018) permet de réaliser de belles cartes en relief. L’export des images n’est pas évident, il s’agit ici d’une simple capture d’écran. library(rayshader) library(rayvista) zone &lt;- plot_3d_vista( lat = 44.9320, long = 1.6905, radius = 4000, zscale = 1.5, phi = 30, theta = 120, windowsize = c(1000, 600), baseshape = &quot;circle&quot;, overlay_detail = 15, elevation_detail = 14, background = &quot;grey20&quot; ) png(&quot;img/mezels.png&quot;, width = 1000, height = 600) render_camera(zoom = .4) render_depth(focus = 0.4, focallength = 55, vignette = TRUE) dev.off() References Giraud, T. (2017). linemap: Line Maps. https://CRAN.R-project.org/package=linemap Giraud, T. (2020). tanaka: Design Shaded Contour Lines (or Tanaka) Maps. https://CRAN.R-project.org/package=tanaka Morgan-Wall, T. (2018). rayshader: Create and Visualize Hillshaded Maps from Elevation Matrices. https://CRAN.R-project.org/package=rayshader Tanaka, K. (1950). The Relief Contour Method of Representing Topography on Maps. The Geographical Review, xl(3). https://doi.org/doi:10.2307/211219 "],["les-transformations-cartographiques.html", "Chapitre 5 Les transformations cartographiques 5.1 Les cartogrammes de Dorling 5.2 Les cartogrammes non continus 5.3 Les cartogrammes continus 5.4 Forces et faiblesses des cartogrammes", " Chapitre 5 Les transformations cartographiques L’anamorphose classique est une représentation des États (ou de mailles quelconques) par des rectangles ou des polygones quelconques en fonction d’une quantité qui leur est rattaché. (…) On s’efforce de garder l’arrangement général des mailles ou la silhouette du continent.” Brunet et al. (1993) 3 types d’anamorphoses ou cartogrammes sont ici présentés : Les cartogrammes de Dorling (Dorling, 1996) Les cartogrammes non contigus (Olson, 1976) Les cartogrammes contigus (Dougenik et al., 1985) Un cours complet sur les anamorphoses : Les anamorphoses cartographiques (Lambert, 2015). Faire des cartogrammes avec R Pour réaliser les cartogrammes nous utilisons le package cartogram (Jeworutzki, 2018). 5.1 Les cartogrammes de Dorling Les territoires sont représentés par des figurés (cercles, des carrés ou des rectangles) ne se recouvrant pas dont les surfaces sont proportionnelles à une variable. Les positions des figurés sont définies selon les positions de départ. Figure 5.1: McCormick (2017) On identifie assez mal l’espace. On peut nommer les cercles pour se repérer et/ou s’aider de la couleur pour faire apparaître des clusters et mieux identifier les blocs géographiques. La perception des quantités est très bonne. Les tailles de cercles sont vraiment comparables. library(mapsf) library(cartogram) com &lt;- st_read(&quot;data/lot46.gpkg&quot;, layer = &quot;commune&quot;, quiet = TRUE) com_dorling &lt;- cartogram_dorling(x = com, weight = &quot;POPULATION&quot;, k = 7) mf_map(com_dorling, col = &quot;#940000&quot;, border= &quot;white&quot;) mf_label( x = com_dorling[order(com_dorling$POPULATION, decreasing = TRUE), ][1:10,], var = &quot;NOM_COM&quot;, overlap = FALSE, show.lines = FALSE, halo = TRUE, r = .15 ) mf_title(&quot;Population du Lot - Cartogramme de Dorling&quot;) Le paramètre k permet de faire varier le facteur d’expansion des cercles. 5.2 Les cartogrammes non continus La taille des polygones est proportionnelle à une variable. L’agencement des polygones les uns par rapport aux autres est conservée. La forme des polygones est ressemblante. (Cauvin et al., 2013) La topologie des régions est perdue. La conservation de la forme des polygones est optimale. com_ncont &lt;- cartogram_ncont(x = com, weight = &quot;POPULATION&quot;, k = 1.2) mf_map(com, col = NA, border = &quot;white&quot;, lwd = 0.5,) mf_map(com_ncont, col = &quot;#940000&quot;, border= &quot;white&quot;, add = TRUE) mf_title(&quot;Population du Lot - Cartogramme de Olson&quot;) Le paramètre k permet de faire varier le facteur d’expansion des polygones. 5.3 Les cartogrammes continus La taille des polygones est proportionnelle à une variable. L’agencement des polygones les uns par rapport aux autres est conservée. Pour conserver la contiguïté, la forme des polygones est fortement transformée. (Paull et Hennig, 2016) La forme des polygones est fortement distordue. C’est une “vraie carte de géographie” : la topologie et la contiguïté sont conservées. com_cont &lt;- cartogram_cont(x = com, weight = &quot;POPULATION&quot;, prepare = &quot;none&quot;) mf_map(com_cont, col = &quot;#940000&quot;, border= &quot;white&quot;, add = FALSE) mf_title(&quot;Population en Martinique - Cartogramme de Dougenik&quot;) mf_inset_on(com, cex = .2, pos = &quot;topleft&quot;) mf_map(com, lwd = .5) mf_inset_off() 5.4 Forces et faiblesses des cartogrammes Les cartogrammes sont des représentations cartographiques perçues comme innovantes (bien que la méthode date de 40 ans). Ces images très généralisées rendent bien compte des quantités et des gradients. Ce sont de vraies images de communication qui provoquent, suscitent l’intérêt, véhiculent un message fort, interpellent. Mais les cartogrammes induisent une perte des repères visuels (difficile de retrouver son pays, ou sa région sur la carte), demandent un effort de lecture qui peut être important et ne permettent pas de gérer des données manquantes. References Brunet, R., Ferras, R. et Théry, H. (1993). Les mots de la géographie: dictionnaire critique. La Documentation française. Cauvin, C., Escobar, F. et Serradj, A. (2013). Thematic Cartography, Cartography and the Impact of the Quantitative Revolution (vol. 2). John Wiley &amp; Sons. Dorling, D. (1996). Area cartograms: their use and creation, concepts and techniques in modern geography (vol. 59, p. 69). Institute of British Geographers. Dougenik, J. A., Chrisman, N. R. et Niemeyer, D. R. (1985). An algorithm to construct continuous area cartograms. The Professional Geographer, 37(1), 75‑81. https://doi.org/10.1111/j.0033-0124.1985.00075.x Jeworutzki, S. (2018). cartogram: Create Cartograms with R. https://CRAN.R-project.org/package=cartogram Lambert, N. (2015). Les anamorphoses cartographiques [Blog]. Carnet néocartographique. https://neocarto.hypotheses.org/366 McCormick, M. (2017). Carbon Atlas. The Guardian. http://kelsocartography.com/blog/wp-content/uploads/2008/03/carbonatlas.pdf Olson, J. M. (1976). Noncontiguous area cartograms. The Professional Geographer, 28(4), 371‑380. https://doi.org/10.1111/j.0033-0124.1976.00371.x Paull, J. et Hennig, B. (2016). Atlas of Organics: Four maps of the world of organic agriculture. Journal of Organics, 3(1), 25‑32. "],["sessioninfo.html", "Chapitre 6 sessionInfo()", " Chapitre 6 sessionInfo() R version 4.1.2 (2021-11-01) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Debian GNU/Linux 11 (bullseye) Matrix products: default BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 locale: [1] LC_CTYPE=fr_FR.UTF-8 LC_NUMERIC=C LC_TIME=fr_FR.UTF-8 [4] LC_COLLATE=fr_FR.UTF-8 LC_MONETARY=fr_FR.UTF-8 LC_MESSAGES=fr_FR.UTF-8 [7] LC_PAPER=fr_FR.UTF-8 LC_NAME=C LC_ADDRESS=C [10] LC_TELEPHONE=C LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] stats graphics grDevices utils datasets methods base other attached packages: [1] cartogram_0.2.2 tanaka_0.1.3 terra_1.4-22 linemap_0.2.0 png_0.1-7 [6] mapsf_0.3.0 sf_1.0-4 knitr_1.36 loaded via a namespace (and not attached): [1] tidyselect_1.1.1 xfun_0.28 bslib_0.3.1 purrr_0.3.4 [5] lattice_0.20-45 vctrs_0.3.8 generics_0.1.1 htmltools_0.5.2 [9] yaml_2.2.1 utf8_1.2.2 rlang_0.4.12 isoband_0.2.5 [13] e1071_1.7-9 jquerylib_0.1.4 pillar_1.6.4 glue_1.5.1 [17] DBI_1.1.1 sp_1.4-6 jpeg_0.1-9 lifecycle_1.0.1 [21] stringr_1.4.0 raster_3.5-9 codetools_0.2-18 evaluate_0.14 [25] fastmap_1.1.0 class_7.3-19 fansi_0.5.0 highr_0.9 [29] Rcpp_1.0.7 KernSmooth_2.23-20 classInt_0.4-3 jsonlite_1.7.2 [33] digest_0.6.29 stringi_1.7.6 bookdown_0.24 dplyr_1.0.7 [37] grid_4.1.2 rgdal_1.5-27 tools_4.1.2 packcircles_0.3.4 [41] magrittr_2.0.1 sass_0.4.0 proxy_0.4-26 tibble_3.1.6 [45] crayon_1.4.2 pkgconfig_2.0.3 ellipsis_0.3.2 assertthat_0.2.1 [49] rmarkdown_2.11 rstudioapi_0.13 R6_2.5.1 units_0.7-2 [53] compiler_4.1.2 "],["references.html", "References", " References Brunet, R., Ferras, R. et Théry, H. (1993). Les mots de la géographie: dictionnaire critique. La Documentation française. Cauvin, C., Escobar, F. et Serradj, A. (2013). Thematic Cartography, Cartography and the Impact of the Quantitative Revolution (vol. 2). John Wiley &amp; Sons. Dorling, D. (1996). Area cartograms: their use and creation, concepts and techniques in modern geography (vol. 59, p. 69). Institute of British Geographers. Dougenik, J. A., Chrisman, N. R. et Niemeyer, D. R. (1985). An algorithm to construct continuous area cartograms. The Professional Geographer, 37(1), 75‑81. https://doi.org/10.1111/j.0033-0124.1985.00075.x Dunnington, D. (2021). ggspatial: Spatial Data Framework for ggplot2. https://CRAN.R-project.org/package=ggspatial Giraud, T. (2017). linemap: Line Maps. https://CRAN.R-project.org/package=linemap Giraud, T. (2020). tanaka: Design Shaded Contour Lines (or Tanaka) Maps. https://CRAN.R-project.org/package=tanaka Giraud, T. (2021). mapsf: Thematic Cartography. https://CRAN.R-project.org/package=mapsf Giraud, T. et Lambert, N. (2017). Reproducible Cartography. M. Peterson (dir.), Cham, Switzerland (p. 173‑183). https://doi.org/10.1007/978-3-319-57336-6_13 Jeworutzki, S. (2018). cartogram: Create Cartograms with R. https://CRAN.R-project.org/package=cartogram Lambert, N. (2015). Les anamorphoses cartographiques [Blog]. Carnet néocartographique. https://neocarto.hypotheses.org/366 McCormick, M. (2017). Carbon Atlas. The Guardian. http://kelsocartography.com/blog/wp-content/uploads/2008/03/carbonatlas.pdf Morgan-Wall, T. (2018). rayshader: Create and Visualize Hillshaded Maps from Elevation Matrices. https://CRAN.R-project.org/package=rayshader Olson, J. M. (1976). Noncontiguous area cartograms. The Professional Geographer, 28(4), 371‑380. https://doi.org/10.1111/j.0033-0124.1976.00371.x Paull, J. et Hennig, B. (2016). Atlas of Organics: Four maps of the world of organic agriculture. Journal of Organics, 3(1), 25‑32. Tanaka, K. (1950). The Relief Contour Method of Representing Topography on Maps. The Geographical Review, xl(3). https://doi.org/doi:10.2307/211219 Tennekes, M. (2018). tmap: Thematic Maps in R. Journal of Statistical Software, 84(6), 1‑39. https://doi.org/10.18637/jss.v084.i06 Wickham, H. (2016). ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
